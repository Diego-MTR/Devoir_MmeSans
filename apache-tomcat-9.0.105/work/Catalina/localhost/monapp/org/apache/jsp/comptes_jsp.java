/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.105
 * Generated at: 2025-06-04 09:58:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class comptes_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"fr\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Liste des Comptes</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("    .notif {\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        top: 30px; right: 30px;\r\n");
      out.write("        background: #2e7dff;\r\n");
      out.write("        color: #fff;\r\n");
      out.write("        padding: 16px 32px;\r\n");
      out.write("        border-radius: 6px;\r\n");
      out.write("        font-size: 1.1em;\r\n");
      out.write("        z-index: 9999;\r\n");
      out.write("        box-shadow: 0 2px 8px rgba(0,0,0,0.15);\r\n");
      out.write("        opacity: 0.95;\r\n");
      out.write("        animation: fadein 0.5s;\r\n");
      out.write("    }\r\n");
      out.write("    .notif.error { background: #e74c3c; }\r\n");
      out.write("    .notif.success { background: #27ae60; }\r\n");
      out.write("    @keyframes fadein { from { opacity: 0; top: 0; } to { opacity: 0.95; top: 30px; } }\r\n");
      out.write("\r\n");
      out.write("    .fab-btn {\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        bottom: 36px;\r\n");
      out.write("        right: 36px;\r\n");
      out.write("        width: 56px;\r\n");
      out.write("        height: 56px;\r\n");
      out.write("        border-radius: 50%;\r\n");
      out.write("        background: #2e7dff;\r\n");
      out.write("        color: #fff;\r\n");
      out.write("        font-size: 2.2em;\r\n");
      out.write("        border: none;\r\n");
      out.write("        box-shadow: 0 2px 8px rgba(0,0,0,0.18);\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        z-index: 1001;\r\n");
      out.write("        transition: background 0.2s;\r\n");
      out.write("    }\r\n");
      out.write("    .fab-btn:hover { background: #1b4fa0; }\r\n");
      out.write("\r\n");
      out.write("    .modal-bg {\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        top: 0; left: 0; right: 0; bottom: 0;\r\n");
      out.write("        background: rgba(30,40,60,0.18);\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        z-index: 1002;\r\n");
      out.write("    }\r\n");
      out.write("    .modal-content {\r\n");
      out.write("        background: #fff;\r\n");
      out.write("        border-radius: 12px;\r\n");
      out.write("        box-shadow: 0 2px 24px rgba(0,0,0,0.18);\r\n");
      out.write("        padding: 32px 28px 24px 28px;\r\n");
      out.write("        min-width: 320px;\r\n");
      out.write("        position: relative;\r\n");
      out.write("        animation: fadein 0.3s;\r\n");
      out.write("    }\r\n");
      out.write("    .close-modal {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: 12px; right: 18px;\r\n");
      out.write("        font-size: 1.7em;\r\n");
      out.write("        color: #888;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("    .modal-content h2 {\r\n");
      out.write("        margin-bottom: 18px;\r\n");
      out.write("        color: #2e7dff;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("    .modal-content input, .modal-content select {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        margin-bottom: 16px;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        border-radius: 6px;\r\n");
      out.write("        border: 1px solid #bbb;\r\n");
      out.write("        font-size: 1em;\r\n");
      out.write("        background: #f6f8fa;\r\n");
      out.write("        transition: border 0.2s;\r\n");
      out.write("    }\r\n");
      out.write("    .modal-content input:focus, .modal-content select:focus {\r\n");
      out.write("        border: 1.5px solid #2e7dff;\r\n");
      out.write("        outline: none;\r\n");
      out.write("        background: #fff;\r\n");
      out.write("    }\r\n");
      out.write("    .modal-content button.btn {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 12px;\r\n");
      out.write("        background: #2e7dff;\r\n");
      out.write("        color: #fff;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 6px;\r\n");
      out.write("        font-size: 1.1em;\r\n");
      out.write("        font-weight: 600;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        transition: background 0.2s;\r\n");
      out.write("    }\r\n");
      out.write("    .modal-content button.btn:hover {\r\n");
      out.write("        background: #1b4fa0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* Confirmation stylis√©e */\r\n");
      out.write("    .custom-confirm-bg {\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        top: 0; left: 0; right: 0; bottom: 0;\r\n");
      out.write("        background: rgba(30,40,60,0.18);\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        z-index: 10010;\r\n");
      out.write("    }\r\n");
      out.write("    .custom-confirm-box {\r\n");
      out.write("        background: #fff;\r\n");
      out.write("        border-radius: 12px;\r\n");
      out.write("        box-shadow: 0 2px 24px rgba(0,0,0,0.18);\r\n");
      out.write("        padding: 32px 32px 24px 32px;\r\n");
      out.write("        min-width: 320px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        position: relative;\r\n");
      out.write("        animation: fadein 0.3s;\r\n");
      out.write("    }\r\n");
      out.write("    .custom-confirm-box .confirm-title {\r\n");
      out.write("        font-size: 1.2em;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        margin-bottom: 14px;\r\n");
      out.write("        color: #53e73c;\r\n");
      out.write("    }\r\n");
      out.write("    .custom-confirm-box .confirm-message {\r\n");
      out.write("        margin-bottom: 22px;\r\n");
      out.write("        font-size: 1.05em;\r\n");
      out.write("        color: #333;\r\n");
      out.write("    }\r\n");
      out.write("    .custom-confirm-box .confirm-btns {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        gap: 18px;\r\n");
      out.write("    }\r\n");
      out.write("    .confirm-btn {\r\n");
      out.write("        padding: 10px 28px;\r\n");
      out.write("        border-radius: 6px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        font-size: 1em;\r\n");
      out.write("        font-weight: 600;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        transition: background 0.2s;\r\n");
      out.write("    }\r\n");
      out.write("    .confirm-btn.yes {\r\n");
      out.write("        background: #53e73c;\r\n");
      out.write("        color: #fff;\r\n");
      out.write("    }\r\n");
      out.write("    .confirm-btn.yes:hover {\r\n");
      out.write("        background: #53e73c;\r\n");
      out.write("    }\r\n");
      out.write("    .confirm-btn.no {\r\n");
      out.write("        background: #f6f8fa;\r\n");
      out.write("        color: #333;\r\n");
      out.write("        border: 1px solid #bbb;\r\n");
      out.write("    }\r\n");
      out.write("    .confirm-btn.no:hover {\r\n");
      out.write("        background: #e0e7ff;\r\n");
      out.write("    }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script>\r\n");
      out.write("    function notify(msg, type = \"info\") {\r\n");
      out.write("        let notif = document.createElement(\"div\");\r\n");
      out.write("        notif.className = \"notif \" + type;\r\n");
      out.write("        notif.innerText = msg;\r\n");
      out.write("        document.body.appendChild(notif);\r\n");
      out.write("        setTimeout(() => notif.remove(), 3000);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Nouvelle confirmation stylis√©e\r\n");
      out.write("    function showConfirm(action, onConfirm) {\r\n");
      out.write("        let old = document.getElementById(\"custom-confirm-bg\");\r\n");
      out.write("        if (old) old.remove();\r\n");
      out.write("\r\n");
      out.write("        let actionText = \"\";\r\n");
      out.write("        let color = \"#e74c3c\";\r\n");
      out.write("        if (action === \"supprimer\") {\r\n");
      out.write("            actionText = \"√ätes-vous s√ªr de vouloir supprimer ce compte ?\";\r\n");
      out.write("            color = \"#e74c3c\";\r\n");
      out.write("        } else if (action === \"modifier\") {\r\n");
      out.write("            actionText = \"√ätes-vous s√ªr de vouloir modifier ce compte ?\";\r\n");
      out.write("            color = \"#f39c12\";\r\n");
      out.write("        } else if (action === \"cr√©er\") {\r\n");
      out.write("            actionText = \"√ätes-vous s√ªr de vouloir cr√©er ce compte ?\";\r\n");
      out.write("            color = \"#2e7dff\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        let bg = document.createElement(\"div\");\r\n");
      out.write("        bg.id = \"custom-confirm-bg\";\r\n");
      out.write("        bg.className = \"custom-confirm-bg\";\r\n");
      out.write("        let box = document.createElement(\"div\");\r\n");
      out.write("        box.className = \"custom-confirm-box\";\r\n");
      out.write("        box.innerHTML = `\r\n");
      out.write("            <div class=\"confirm-title\" style=\"color:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${color}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\">Confirmation</div>\r\n");
      out.write("            <div class=\"confirm-message\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${actionText}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("            <div class=\"confirm-btns\">\r\n");
      out.write("                <button class=\"confirm-btn yes\" id=\"confirm-yes\">Oui</button>\r\n");
      out.write("                <button class=\"confirm-btn no\" id=\"confirm-no\">Non</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        `;\r\n");
      out.write("        bg.appendChild(box);\r\n");
      out.write("        document.body.appendChild(bg);\r\n");
      out.write("        document.getElementById(\"confirm-yes\").onclick = function() {\r\n");
      out.write("            bg.remove();\r\n");
      out.write("            onConfirm();\r\n");
      out.write("        };\r\n");
      out.write("        document.getElementById(\"confirm-no\").onclick = function() {\r\n");
      out.write("            bg.remove();\r\n");
      out.write("        };\r\n");
      out.write("    }\r\n");
      out.write("    function confirmAction(action, url) {\r\n");
      out.write("        showConfirm(action, function() {\r\n");
      out.write("            window.location = url;\r\n");
      out.write("        });\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("    document.addEventListener(\"DOMContentLoaded\", function() {\r\n");
      out.write("        var btn = document.getElementById(\"addCompteBtn\");\r\n");
      out.write("        if (btn) {\r\n");
      out.write("            btn.onclick = function() {\r\n");
      out.write("                document.getElementById(\"addCompteModal\").style.display = \"flex\";\r\n");
      out.write("            };\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    function closeCompteModal() {\r\n");
      out.write("        document.getElementById(\"addCompteModal\").style.display = \"none\";\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function confirmCreate(e, formIdOrAction) {\r\n");
      out.write("    e.preventDefault();\r\n");
      out.write("    showConfirm('cr√©er', function() {\r\n");
      out.write("        // Soumission du formulaire\r\n");
      out.write("        if (typeof formIdOrAction === \"string\") {\r\n");
      out.write("            // Si c'est un id de formulaire\r\n");
      out.write("            var form = e.target;\r\n");
      out.write("            if (form && form.submit) form.submit();\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    return false;\r\n");
      out.write("}\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"sidebar\">\r\n");
      out.write("        <h2>MonApp</h2>\r\n");
      out.write("        <a href=\"profil.jsp\">üôç‚Äç‚ôÇÔ∏è Profil</a>\r\n");
      out.write("        <a href=\"home.jsp\">üè† Accueil</a>\r\n");
      out.write("        <a href=\"matiere\">üìö Voir les mati√®res</a>\r\n");
      out.write("        <a href=\"compte\">üë§ Voir les comptes</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"main-content\">\r\n");
      out.write("        <div class=\"header\">\r\n");
      out.write("            <h1>Liste des Comptes</h1>\r\n");
      out.write("            <a href=\"home.jsp\" class=\"btn\">Retour √† l'accueil</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"content-box\">\r\n");
      out.write("            ");

                String userRole = (String) session.getAttribute("role");
                if ("admin".equals(userRole)) {
            
      out.write("\r\n");
      out.write("            <!-- Bouton flottant + -->\r\n");
      out.write("            <button id=\"addCompteBtn\" class=\"fab-btn\" title=\"Ajouter un compte\">+</button>\r\n");
      out.write("            <!-- Modal d'ajout de compte -->\r\n");
      out.write("            <div id=\"addCompteModal\" class=\"modal-bg\" style=\"display:none;\">\r\n");
      out.write("                <div class=\"modal-content\">\r\n");
      out.write("                    <span class=\"close-modal\" onclick=\"closeCompteModal()\">&times;</span>\r\n");
      out.write("                    <h2>Ajouter un compte</h2>\r\n");
      out.write("                    <form id=\"addCompteForm\" method=\"post\" action=\"compte\" onsubmit=\"return confirmCreate(event, 'compte');\">                        <input type=\"text\" name=\"login\" placeholder=\"Login\" required>\r\n");
      out.write("                        <input type=\"password\" name=\"password\" placeholder=\"Mot de passe\" required>\r\n");
      out.write("                        <select name=\"role\" required>\r\n");
      out.write("                            <option value=\"user\">Utilisateur</option>\r\n");
      out.write("                            <option value=\"admin\">Administrateur</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                        <button type=\"submit\" class=\"btn\">Ajouter</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");

                }
            
      out.write("\r\n");
      out.write("            <ul class=\"styled-list\">\r\n");
      out.write("            ");

                java.util.List<model.Compte> comptes = (java.util.List<model.Compte>) request.getAttribute("comptes");
                if (comptes != null && !comptes.isEmpty()) {
                    for (model.Compte c : comptes) {
            
      out.write("\r\n");
      out.write("                <li>\r\n");
      out.write("                    <span>");
      out.print( c.getLogin() );
      out.write(' ');
      out.write('(');
      out.print( c.getRole() );
      out.write(")</span>\r\n");
      out.write("                    <span>\r\n");
      out.write("                        ");
 if ("admin".equals(userRole)) { 
      out.write("\r\n");
      out.write("                        <a href=\"compte?action=edit&id=");
      out.print( c.getId() );
      out.write("\" class=\"btn\" onclick=\"return confirmAction('modifier', 'compte?action=edit&id=");
      out.print( c.getId() );
      out.write("')\">‚úèÔ∏è</a>\r\n");
      out.write("                        <a href=\"#\" class=\"btn\" onclick=\"return confirmAction('supprimer', 'compte?action=delete&id=");
      out.print( c.getId() );
      out.write("')\">üóëÔ∏è</a>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </span>\r\n");
      out.write("                </li>\r\n");
      out.write("            ");

                    }
                } else {
            
      out.write("\r\n");
      out.write("                <li>Aucun compte √† afficher.</li>\r\n");
      out.write("            ");

                }
            
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");

        String notif = request.getParameter("notif");
        if ("success_add".equals(notif)) {
    
      out.write("\r\n");
      out.write("    <script>notify(\"Compte ajout√© avec succ√®s\", \"success\");</script>\r\n");
      out.write("    ");

        } else if ("success_delete".equals(notif)) {
    
      out.write("\r\n");
      out.write("    <script>notify(\"Compte supprim√© avec succ√®s\", \"success\");</script>\r\n");
      out.write("    ");

        } else if ("success_edit".equals(notif)) {
    
      out.write("\r\n");
      out.write("    <script>notify(\"Compte modifi√© avec succ√®s\", \"success\");</script>\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
